apply plugin: 'java'
apply plugin: 'eclipse'

def versionObj = new Version(major: 0, minor: 1, revision: 0)
version = "$versionObj"

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = project.name
    manifest {
        attributes 'Implementation-Version': version
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Version': version
    }
    baseName = project.name + '-withDependencies'
    from { 
        configurations.compile.collect {
            dependency ->
            if (dependency.directory) { // If it is a folder, just include the folder in its entirety
                return dependency
            } else {    // If it isn't a folder, put it in a zipTree. if it is a zip or jar the contents will be extracted.
                return zipTree(dependency)
            }
        }
    }
    with jar
}

repositories {
    jcenter()
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.12'

	compile 'net.dv8tion:JDA:3.3.0_271'
	compile 'com.google.code.gson:gson:2.7'
	

    testCompile 'junit:junit:4.12'
}

class Version {
    int major, minor, revision

    String getBuild() {
        System.getenv("BUILD_NUMBER") ?: System.getProperty("BUILD_NUMBER") ?: "DEV"
    }

    String toString() {
        "${major}.${minor}.${revision}_$build"
    }
}

//Creates the w/ dependencies jar.
assemble.dependsOn fatJar